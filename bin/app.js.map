{"mappings":"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","sources":["<anon>","src/app.ts","src/service.ts","src/client.ts","src/constant.ts","src/type.ts","src/util.ts"],"sourcesContent":["#!/usr/bin/env node\nvar $yIzob$chalk = require(\"chalk\");\nvar $yIzob$figlet = require(\"figlet\");\nvar $yIzob$prompts = require(\"prompts\");\nvar $yIzob$awaittojs = require(\"await-to-js\");\nvar $yIzob$axios = require(\"axios\");\nvar $yIzob$ora = require(\"ora\");\nvar $yIzob$bignumberjs = require(\"bignumber.js\");\nvar $yIzob$precisiontradingindicators = require(\"precision-trading-indicators\");\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n\n\n\n\nconst $5a3b0f3212bb3823$export$5fc33d4e2758bd58 = (0, ($parcel$interopDefault($yIzob$axios))).create({\n    baseURL: \"https://api.binance.com/api/v3\"\n});\n\n\nconst $da9b175a83213ef9$export$b1319c00e04db0d9 = async (args)=>{\n    return (0, $5a3b0f3212bb3823$export$5fc33d4e2758bd58).request({\n        method: \"GET\",\n        url: \"/ticker/price\",\n        params: args\n    });\n};\nconst $da9b175a83213ef9$export$9e5c183359f8fd67 = async (args)=>{\n    return (0, $5a3b0f3212bb3823$export$5fc33d4e2758bd58).request({\n        method: \"GET\",\n        url: \"/klines\",\n        params: args\n    });\n};\n\n\n\nvar $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4;\n(function($e6f8f1bd2950ed3c$export$5128aa4ecd1280a4) {\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"MINUTE_1\"] = \"1m\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"MINUTE_3\"] = \"3m\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"MINUTE_5\"] = \"5m\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"MINUTE_15\"] = \"15m\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"MINUTE_30\"] = \"30m\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"HOUR_1\"] = \"1h\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"HOUR_2\"] = \"2h\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"HOUR_4\"] = \"4h\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"HOUR_6\"] = \"6h\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"HOUR_8\"] = \"8h\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"HOUR_12\"] = \"12h\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"DAY_1\"] = \"1d\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"DAY_3\"] = \"3d\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"WEEK_1\"] = \"1w\";\n    $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4[\"MONTH_1\"] = \"1M\";\n})($e6f8f1bd2950ed3c$export$5128aa4ecd1280a4 || ($e6f8f1bd2950ed3c$export$5128aa4ecd1280a4 = {}));\n\n\nconst $93690dff892088a9$export$aa40d6b8948fbc43 = {\n    getTickers: (0, ($parcel$interopDefault($yIzob$ora)))(\"Fetching tickers...\"),\n    getKlines: (0, ($parcel$interopDefault($yIzob$ora)))(\"Fetching klines...\")\n};\nconst $93690dff892088a9$export$a867bcbce9e92f58 = Object.entries((0, $e6f8f1bd2950ed3c$export$5128aa4ecd1280a4)).map(([title, value])=>({\n        title: title,\n        value: value\n    }));\nconst $93690dff892088a9$export$d102b3be7ceada42 = {\n    timestamp: [],\n    open: [],\n    high: [],\n    low: [],\n    close: [],\n    volume: []\n};\n\n\n\n\n\nconst $d86a8b542275eaa5$export$847f4ee65531b89 = (data, period = 14)=>{\n    const indicator = new (0, ($parcel$interopDefault($yIzob$precisiontradingindicators)))((0, ($parcel$interopDefault($yIzob$bignumberjs))));\n    const ohlcv = data.reduce((acc, [timestamp, open, high, low, close, volume])=>({\n            timestamp: [\n                ...acc.timestamp,\n                timestamp\n            ],\n            open: [\n                ...acc.open,\n                (0, ($parcel$interopDefault($yIzob$bignumberjs)))(open)\n            ],\n            high: [\n                ...acc.high,\n                (0, ($parcel$interopDefault($yIzob$bignumberjs)))(high)\n            ],\n            low: [\n                ...acc.low,\n                (0, ($parcel$interopDefault($yIzob$bignumberjs)))(low)\n            ],\n            close: [\n                ...acc.close,\n                (0, ($parcel$interopDefault($yIzob$bignumberjs)))(close)\n            ],\n            volume: [\n                ...acc.volume,\n                volume\n            ]\n        }), (0, $93690dff892088a9$export$d102b3be7ceada42));\n    const bollinger = indicator.BOLLINGER_BANDS(ohlcv.close, 20, 2);\n    const candlestick = indicator.getCandlestickPattern(ohlcv);\n    const trend = indicator.getTrend(bollinger.mid, period);\n    return {\n        trend: trend,\n        candlestick: candlestick\n    };\n};\n\n\nconsole.clear();\nconsole.log((0, ($parcel$interopDefault($yIzob$chalk))).greenBright.bold((0, ($parcel$interopDefault($yIzob$figlet))).textSync(\"cryptosignal\", {\n    font: \"Larry 3D\",\n    showHardBlanks: true\n})) + \"\\n\");\n(async ()=>{\n    let err, tickers, klines;\n    (0, $93690dff892088a9$export$aa40d6b8948fbc43).getTickers.start();\n    [err, tickers] = await (0, $yIzob$awaittojs.to)((0, $da9b175a83213ef9$export$b1319c00e04db0d9)({}));\n    (0, $93690dff892088a9$export$aa40d6b8948fbc43).getTickers.stop();\n    if (err) {\n        console.error((0, ($parcel$interopDefault($yIzob$chalk))).red(\"An error has occured while fetching triggers.\"));\n        return;\n    }\n    const prompt = await (0, ($parcel$interopDefault($yIzob$prompts)))([\n        {\n            name: \"symbol\",\n            type: \"autocompleteMultiselect\",\n            message: \"Symbol\",\n            min: 1,\n            choices: tickers?.data?.map((ticker)=>({\n                    title: ticker.symbol,\n                    value: ticker.symbol\n                }))\n        },\n        {\n            name: \"interval\",\n            type: \"select\",\n            message: \"Interval\",\n            choices: (0, $93690dff892088a9$export$a867bcbce9e92f58)\n        }\n    ]);\n    if (!prompt.symbol || !prompt.interval) return;\n    const outputs = {};\n    try {\n        (0, $93690dff892088a9$export$aa40d6b8948fbc43).getKlines.start();\n        for (const symbol of prompt.symbol){\n            [err, klines] = await (0, $yIzob$awaittojs.to)((0, $da9b175a83213ef9$export$9e5c183359f8fd67)({\n                symbol: symbol,\n                interval: prompt.interval\n            }));\n            outputs[symbol] = (0, $d86a8b542275eaa5$export$847f4ee65531b89)(klines?.data, 14);\n        }\n    } catch (err) {\n        (0, $93690dff892088a9$export$aa40d6b8948fbc43).getKlines.stop();\n        return console.error((0, ($parcel$interopDefault($yIzob$chalk))).red(\"An error has occured while fetching klines.\"));\n    } finally{\n        (0, $93690dff892088a9$export$aa40d6b8948fbc43).getKlines.stop();\n    }\n    console.table(Array(...Object.entries(outputs)).map(([symbol, output])=>({\n            Symbol: symbol,\n            Interval: prompt.interval,\n            \"Pattern Direction\": output.candlestick.pattern,\n            \"Pattern Name\": output.candlestick.name,\n            \"Pattern Score\": output.candlestick.score,\n            \"Active Trend\": output.trend\n        })));\n})();\n\n\n//# sourceMappingURL=app.js.map\n","#!/usr/bin/env node\nimport chalk from \"chalk\";\nimport figlet from \"figlet\";\nimport prompts from \"prompts\";\nimport { to } from \"await-to-js\";\nimport { getKlines, getTickers } from \"./service\";\nimport { intervalChoices, spinners } from \"./constant\";\nimport { buildIndicatorOutput } from \"./util\";\n\nconsole.clear();\n\nconsole.log(\n  chalk.greenBright.bold(\n    figlet.textSync(\"cryptosignal\", {\n      font: \"Larry 3D\",\n      showHardBlanks: true,\n    })\n  ) + \"\\n\"\n);\n\n(async () => {\n  let err, tickers, klines;\n\n  spinners.getTickers.start();\n\n  [err, tickers] = await to(getTickers({}));\n\n  spinners.getTickers.stop();\n\n  if (err) {\n    console.error(chalk.red(\"An error has occured while fetching triggers.\"));\n    return;\n  }\n\n  const prompt = await prompts([\n    {\n      name: \"symbol\",\n      type: \"autocompleteMultiselect\",\n      message: \"Symbol\",\n      min: 1,\n      choices: tickers?.data?.map((ticker) => ({\n        title: ticker.symbol,\n        value: ticker.symbol,\n      })),\n    },\n    {\n      name: \"interval\",\n      type: \"select\",\n      message: \"Interval\",\n      choices: intervalChoices,\n    },\n  ]);\n\n  if (!prompt.symbol || !prompt.interval) return;\n\n  const outputs: Record<string, any> = {};\n\n  try {\n    spinners.getKlines.start();\n\n    for (const symbol of prompt.symbol) {\n      [err, klines] = await to(\n        getKlines({\n          symbol: symbol,\n          interval: prompt.interval,\n        })\n      );\n      outputs[symbol] = buildIndicatorOutput(klines?.data!, 14);\n    }\n  } catch (err) {\n    spinners.getKlines.stop();\n    return console.error(\n      chalk.red(\"An error has occured while fetching klines.\")\n    );\n  } finally {\n    spinners.getKlines.stop();\n  }\n\n  console.table(\n    Array<[string, any]>(...Object.entries(outputs)).map(\n      ([symbol, output]) => ({\n        Symbol: symbol,\n        Interval: prompt.interval,\n        \"Pattern Direction\": output.candlestick.pattern,\n        \"Pattern Name\": output.candlestick.name,\n        \"Pattern Score\": output.candlestick.score,\n        \"Active Trend\": output.trend,\n      })\n    )\n  );\n})();\n","import { axiosClient } from \"./client\";\nimport {\n  GetKlinesArgs,\n  GetKlinesResponse,\n  GetTickersArgs,\n  GetTickersResponse,\n} from \"./type.js\";\n\nexport const getTickers = async (args: GetTickersArgs) => {\n  return axiosClient.request<GetTickersResponse>({\n    method: \"GET\",\n    url: \"/ticker/price\",\n    params: args,\n  });\n};\n\nexport const getKlines = async (args: GetKlinesArgs) => {\n  return axiosClient.request<GetKlinesResponse>({\n    method: \"GET\",\n    url: \"/klines\",\n    params: args,\n  });\n};\n","import axios from \"axios\";\n\nexport const axiosClient = axios.create({\n  baseURL: \"https://api.binance.com/api/v3\",\n});\n","import ora from \"ora\";\nimport { IntervalChoice } from \"./type\";\n\nexport const spinners = {\n  getTickers: ora(\"Fetching tickers...\"),\n  getKlines: ora(\"Fetching klines...\"),\n};\n\nexport const intervalChoices = Object.entries(IntervalChoice).map(\n  ([title, value]) => ({\n    title,\n    value,\n  })\n);\n\nexport const initialOHLCV: Record<string, any[]> = {\n  timestamp: [],\n  open: [],\n  high: [],\n  low: [],\n  close: [],\n  volume: [],\n};\n","export type OHLCVPayload = {};\n\nexport type TickerPayload = {\n  symbol: string;\n  price: string;\n};\n\nexport type KlinePayload = [\n  /** Timestamp, Open, High, Low, Close, Volume  */\n  string,\n  string,\n  string,\n  string,\n  string,\n  string\n];\n\nexport type GetTickersResponse = TickerPayload[];\n\nexport type GetKlinesResponse = KlinePayload[];\n\nexport type GetTickersArgs = {};\n\nexport type GetKlinesArgs = {\n  symbol: string;\n  interval: IntervalChoice;\n};\n\nexport enum IntervalChoice {\n  MINUTE_1 = \"1m\",\n  MINUTE_3 = \"3m\",\n  MINUTE_5 = \"5m\",\n  MINUTE_15 = \"15m\",\n  MINUTE_30 = \"30m\",\n  HOUR_1 = \"1h\",\n  HOUR_2 = \"2h\",\n  HOUR_4 = \"4h\",\n  HOUR_6 = \"6h\",\n  HOUR_8 = \"8h\",\n  HOUR_12 = \"12h\",\n  DAY_1 = \"1d\",\n  DAY_3 = \"3d\",\n  WEEK_1 = \"1w\",\n  MONTH_1 = \"1M\",\n}\n","import BigNumber from \"bignumber.js\";\nimport PrecisionTradingIndicators from \"precision-trading-indicators\";\nimport { KlinePayload } from \"./type\";\nimport { initialOHLCV } from \"./constant\";\n\nexport const buildIndicatorOutput = (data: KlinePayload[], period = 14) => {\n  const indicator = new PrecisionTradingIndicators(BigNumber);\n\n  const ohlcv = data.reduce(\n    (\n      acc: typeof initialOHLCV,\n      [timestamp, open, high, low, close, volume]\n    ) => ({\n      timestamp: [...acc.timestamp, timestamp],\n      open: [...acc.open, BigNumber(open)],\n      high: [...acc.high, BigNumber(high)],\n      low: [...acc.low, BigNumber(low)],\n      close: [...acc.close, BigNumber(close)],\n      volume: [...acc.volume, volume],\n    }),\n    initialOHLCV\n  );\n\n  const bollinger = indicator.BOLLINGER_BANDS(ohlcv.close, 20, 2);\n  const candlestick = indicator.getCandlestickPattern(ohlcv);\n  const trend = indicator.getTrend(bollinger.mid, period);\n\n  return {\n    trend,\n    candlestick,\n  };\n};\n"],"names":["$e6f8f1bd2950ed3c$export$5128aa4ecd1280a4","$yIzob$chalk","require","$yIzob$figlet","$yIzob$prompts","$yIzob$awaittojs","$yIzob$axios","$yIzob$ora","$yIzob$bignumberjs","$yIzob$precisiontradingindicators","$parcel$interopDefault","a","__esModule","default","$5a3b0f3212bb3823$export$5fc33d4e2758bd58","create","baseURL","$da9b175a83213ef9$export$b1319c00e04db0d9","args","request","method","url","params","$da9b175a83213ef9$export$9e5c183359f8fd67","$93690dff892088a9$export$aa40d6b8948fbc43","getTickers","getKlines","$93690dff892088a9$export$a867bcbce9e92f58","Object","entries","map","title","value","$93690dff892088a9$export$d102b3be7ceada42","timestamp","open","high","low","close","volume","$d86a8b542275eaa5$export$847f4ee65531b89","data","period","indicator","ohlcv","reduce","acc","bollinger","BOLLINGER_BANDS","candlestick","getCandlestickPattern","trend","getTrend","mid","console","clear","log","greenBright","bold","textSync","font","showHardBlanks","err","tickers","klines","start","to","stop","error","red","prompt","name","type","message","min","choices","ticker","symbol","interval","outputs","table","Array","output","Symbol","Interval","pattern","score"],"version":3,"file":"app.js.map","sourceRoot":"../"}