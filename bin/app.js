#!/usr/bin/env node
var e,t,r=require("chalk"),i=require("figlet"),n=require("prompts"),a=require("await-to-js"),s=require("axios"),l=require("ora"),o=require("bignumber.js"),c=require("precision-trading-indicators");function m(e){return e&&e.__esModule?e.default:e}const u=m(s).create({baseURL:"https://api.binance.com/api/v3"}),h=async e=>u.request({method:"GET",url:"/ticker/price",params:e}),d=async e=>u.request({method:"GET",url:"/klines",params:e});(e=t||(t={})).MINUTE_1="1m",e.MINUTE_3="3m",e.MINUTE_5="5m",e.MINUTE_15="15m",e.MINUTE_30="30m",e.HOUR_1="1h",e.HOUR_2="2h",e.HOUR_4="4h",e.HOUR_6="6h",e.HOUR_8="8h",e.HOUR_12="12h",e.DAY_1="1d",e.DAY_3="3d",e.WEEK_1="1w",e.MONTH_1="1M";const g={getTickers:m(l)("Fetching tickers..."),getKlines:m(l)("Fetching klines...")},p=Object.entries(t).map(([e,t])=>({title:e,value:t})),y={timestamp:[],open:[],high:[],low:[],close:[],volume:[]},_=(e,t=14)=>{let r=new(m(c))(m(o)),i=e.reduce((e,[t,r,i,n,a,s])=>({timestamp:[...e.timestamp,t],open:[...e.open,m(o)(r)],high:[...e.high,m(o)(i)],low:[...e.low,m(o)(n)],close:[...e.close,m(o)(a)],volume:[...e.volume,s]}),y),n=r.BOLLINGER_BANDS(i.close,20,2),a=r.getCandlestickPattern(i);return{trend:r.getTrend(n.mid,t),candlestick:a}};console.clear(),console.log(m(r).greenBright.bold(m(i).textSync("cryptosignal",{font:"Larry 3D",showHardBlanks:!0}))+"\n"),(async()=>{let e,t,i;if(g.getTickers.start(),[e,t]=await (0,a.to)(h({})),g.getTickers.stop(),e){console.error(m(r).red("An error has occured while fetching triggers."));return}let s=await m(n)([{name:"symbol",type:"autocompleteMultiselect",message:"Symbol",min:1,choices:t?.data?.map(e=>({title:e.symbol,value:e.symbol}))},{name:"interval",type:"select",message:"Interval",choices:p}]);if(!s.symbol||!s.interval)return;let l={};try{for(let t of(g.getKlines.start(),s.symbol))[e,i]=await (0,a.to)(d({symbol:t,interval:s.interval})),l[t]=_(i?.data,14)}catch(e){return g.getKlines.stop(),console.error(m(r).red("An error has occured while fetching klines."))}finally{g.getKlines.stop()}console.table(Array(...Object.entries(l)).map(([e,t])=>({Symbol:e,Interval:s.interval,"Pattern Direction":t.candlestick.pattern,"Pattern Name":t.candlestick.name,"Pattern Score":t.candlestick.score,"Active Trend":t.trend})))})();
//# sourceMappingURL=app.js.map
