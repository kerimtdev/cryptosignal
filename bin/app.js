#!/usr/bin/env node
var e,t;import r from"chalk";import o from"figlet";import i from"prompts";import{to as a}from"await-to-js";import n from"axios";import s from"ora";import l from"bignumber.js";import c from"precision-trading-indicators";let m=n.create({baseURL:"https://api.binance.com/api/v3"}),p=async e=>m.request({method:"GET",url:"/ticker/price",params:e}),h=async e=>m.request({method:"GET",url:"/klines",params:e});(t=e||(e={})).MINUTE_1="1m",t.MINUTE_3="3m",t.MINUTE_5="5m",t.MINUTE_15="15m",t.MINUTE_30="30m",t.HOUR_1="1h",t.HOUR_2="2h",t.HOUR_4="4h",t.HOUR_6="6h",t.HOUR_8="8h",t.HOUR_12="12h",t.DAY_1="1d",t.DAY_3="3d",t.WEEK_1="1w",t.MONTH_1="1M";let g={getTickers:s("Fetching tickers..."),getKlines:s("Fetching klines...")},d=Object.entries(e).map(([e,t])=>({title:e,value:t})),u={timestamp:[],open:[],high:[],low:[],close:[],volume:[]},y=(e,t=14)=>{let r=new c(l),o=e.reduce((e,[t,r,o,i,a,n])=>({timestamp:[...e.timestamp,t],open:[...e.open,l(r)],high:[...e.high,l(o)],low:[...e.low,l(i)],close:[...e.close,l(a)],volume:[...e.volume,n]}),u),i=r.BOLLINGER_BANDS(o.close,20,2),a=r.getCandlestickPattern(o);return{trend:r.getTrend(i.mid,t),candlestick:a}};console.clear(),console.log(r.greenBright.bold(o.textSync("cryptosignal",{font:"Larry 3D",showHardBlanks:!0}))+"\n"),(async()=>{let e,t,o;if(g.getTickers.start(),[e,t]=await a(p({})),g.getTickers.stop(),e){console.error(r.red("An error has occured while fetching triggers."));return}let n=await i([{name:"symbol",type:"autocompleteMultiselect",message:"Symbol",min:1,choices:t?.data?.map(e=>({title:e.symbol,value:e.symbol}))},{name:"interval",type:"select",message:"Interval",choices:d}]);if(!n.symbol||!n.interval)return;let s={};try{for(let t of(g.getKlines.start(),n.symbol))[e,o]=await a(h({symbol:t,interval:n.interval})),s[t]=y(o?.data,14)}catch(e){return g.getKlines.stop(),console.error(r.red("An error has occured while fetching klines."))}finally{g.getKlines.stop()}console.table(Array(...Object.entries(s)).map(([e,t])=>({Symbol:e,Interval:n.interval,"Pattern Direction":t.candlestick.pattern,"Pattern Name":t.candlestick.name,"Pattern Score":t.candlestick.score,"Active Trend":t.trend})))})();
//# sourceMappingURL=app.js.map
